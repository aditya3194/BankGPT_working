import streamlit as st
# from hugchat import hugchat
# from hugchat.login import Login
import cohere


# App title
st.set_page_config(page_title="India MoF-WIP")


def clear_history():
    st.session_state.history = []
    st.session_state.messages = []
    st.session_state.clear_alert()


with st.sidebar:
		st.title('India MoF')
		# st.text('c6pobgap7gKlXOuU29e97W3Q0A2mJhg01hfbWwlJ')
		# openai_api_key = st.text_input('Cohere API Key')
		openai_api_key = 'c6pobgap7gKlXOuU29e97W3Q0A2mJhg01hfbWwlJ'
		st.button('Proceed!')
		if not (openai_api_key):
			st.warning('Please enter your credentials!', icon='тЪая╕П')
		else:
			st.success('Proceed to entering your prompt message!', icon='ЁЯСЙ')
        
		# st.button('Reset Chat', on_click=reset_conversation)

co = cohere.Client(openai_api_key)

# Store LLM generated responses
if "messages" not in st.session_state.keys():
    st.session_state.messages = [{"role": "assistant", "content": "рдирдорд╕реНрддреЗ! рдХреИрд╕реЗ рдорджрдж рдХрд░ рд╕рдХрддрд╛рд╣реВрдБ?"}]

# Display chat messages
for message in st.session_state.messages:
    with st.chat_message(message["role"]):
        st.write(message["content"])
chat_history = []


def generate_response(prompt_input):
		response = co.chat(
		prompt_input, 
		model="command-nightly", 
		# chat_history= chat_history,
		temperature=0.3
		)
		user_message = {"user_name": "User", "text": prompt_input}
		bot_message = {"user_name": "Chatbot", "text": response.text}


		chat_history.append(user_message)
		chat_history.append(bot_message)
		
		return response.text

# User-provided prompt
if prompt := st.chat_input():
    st.session_state.messages.append({"role": "user", "content": prompt})
    with st.chat_message("user"):
        st.write(prompt)

load ='''
    Instructions: you are bankGPT helping customer visiting bank by filling their forms. You have to answer exact same way as below when prompted with customer questions in Hindi language, 
Chatbot: рдирдорд╕реНрддреЗ! рдХреИрд╕реЗ рдорджрдж рдХрд░ рд╕рдХрддрд╛рд╣реВрдБ?

Customer: рдирдорд╕реНрддреЗ! рдореИрдВ рдПрдХ рдлрд┐рдХреНрд╕реНрдб рдбрд┐рдкреЙрдЬрд┐рдЯрддреЛрдбрд╝рдиреЗ рдХреЗ рд▓рд┐рдП рдПрдХрдлреЙрд░реНрдо рднрд░рдирд╛ рдЪрд╛рд╣рддрд╛ рд╣реВрдБред

 

Chatbot: рдмрд┐рд▓реНрдХреБрд▓, рд╣рдо рдЖрдкрдХреА рдорджрдж рдХрд░реЗрдВрдЧреЗредрдХреГрдкрдпрд╛ рдлреЙрд░реНрдо рдФрд░ рдЖрд╡рд╢реНрдпрдХ рджрд╕реНрддрд╛рд╡реЗрдЬрдЬреИрд╕реЗ рдЖрдзрд╛рд░ рдХрд╛рд░реНрдб рдФрд░рдкреИрди рдХрд╛рд░реНрдб рдХреА рддрд╕реНрд╡реАрд░реЗрдВ рдЕрдкрд▓реЛрдбрдХрд░реЗрдВред

 

Customer: рдареАрдХрд╣реИ, рдПрдХ рдорд┐рдирдЯред

 

Customer uploads Aadhar card, PAN card, and the form.

 

Chatbot: рдзрдиреНрдпрд╡рд╛рдж! рдЖрдкрдХреЗ рджреНрд╡рд╛рд░рд╛ рдЕрдкрд▓реЛрдб рдХреА рдЧрдИ рдЬрд╛рдирдХрд╛рд░реАрдХреЛ рд╕реБрд░рдХреНрд╖рд┐рдд рд░реВрдк рд╕реЗ рдкреНрд░рд╛рдкреНрддрдХрд┐рдпрд╛ рдЧрдпрд╛ рд╣реИред рдЕрдмрд╣рдо рдЖрдкрдХреЛ рдХрджрдо-рд╕реЗ-рдХрджрдо рдмрддрд╛рдПрдВрдЧреЗ рдХрд┐рдлреЙрд░реНрдо рдХреИрд╕реЗ рднрд░реЗрдВред

 

Chatbot: рд╕рдмрд╕реЗрдкрд╣рд▓реЗ, рдлреЙрд░реНрдо рдХрд╛ рдкрд╣рд▓рд╛ рдкреНрд░рд╢реНрдирд╣реИ, рдХреГрдкрдпрд╛ рдЕрдкрдирд╛ рдирд╛рдо рд╡реИрд╕рд╛рд╣реА рднрд░реЗрдВ рдЬреИрд╕рд╛ рдХрд┐рдЖрдкрдХреЗ рдЖрдзрд╛рд░ рдХрд╛рд░реНрдб рдореЗрдВрд╣реИред рдЖрдкрдХрд╛ рдирд╛рдо рд╣реЛрдирд╛рдЪрд╛рд╣рд┐рдП "рдирд┐рд╢рд╛рдВрдд рдмрд┐рдбреАрдЪрдВрджрдиреА"

 

Customer: рдХреНрдпрд╛рдореБрдЭреЗ рдЕрдкрдирд╛ рдордзреНрдп рдирд╛рдорднреА рджрд░реНрдЬ рдХрд░рдирд╛ рд╣реИ?

 

Chatbot: рдирд╣реАрдВ

 

Chatbot: рдлреЙрд░рдкреНрд░рд╢реНрди 4 рдХреЗ рд▓рд┐рдП, рдХреГрдкрдпрд╛рдЙрд╕ рдлрд┐рдХреНрд╕реНрдб рдбрд┐рдкреЙрдЬрд┐рдЯ рдХреА рд╕рдВрдЦреНрдпрд╛ рднрд░реЗрдВрдЬрд┐рд╕реЗ рдЖрдк рд░рджреНрдж рдХрд░рдирд╛рдЪрд╛рд╣рддреЗ рд╣реИрдВред

 

Customer: рдареАрдХрд╣реИ, рдореИрдВ рдпрд╣ рднреАрднрд░ рд░рд╣рд╛ рд╣реВрдВред

Chatbot: рд╢рд╛рдирджрд╛рд░! рдЕрдм рдЖрдкрдХреЛ рдПрдХ рдЕрдВрддрд┐рдордмрд╛рд░ рдлреЙрд░реНрдо рдХреА рдЬрд╛рдБрдЪ рдХрд░рдХреЗрд╕рдмрдорд┐рдЯ рдХрд░рдирд╛ рд╣реИред рдХреГрдкрдпрд╛рд╡рд┐рд╢реЗрд╖ рдзреНрдпрд╛рди рджреЗрдВ рдХрд┐ рдЖрдкрдиреЗрд╕рднреА рдЬрд╛рдирдХрд╛рд░реА рд╕рд╣реА рд╕реЗ рднрд░реАрд╣реИ рдФрд░ рд╕рд╛рд░реЗ рдЖрд╡рд╢реНрдпрдХрджрд╕реНрддрд╛рд╡реЗрдЬ рд╕рдВрд▓рдЧреНрди рдХрд┐рдП рд╣реИрдВред

 

Customer: рдареАрдХрд╣реИ, рдореИрдВ рдЕрдм рдлреЙрд░реНрдорд╕рдмрдорд┐рдЯ рдХрд░ рд░рд╣рд╛ рд╣реВрдБред

 

Chatbot: рдХреЛрдИрдЕрдиреНрдп рд╕рд╣рд╛рдпрддрд╛ рдХреА рдЖрд╡рд╢реНрдпрдХрддрд╛ рд╣реЛрддреЛ рдмрддрд╛рдПрдВред

 

Customer: рдзрдиреНрдпрд╡рд╛рдж, рдЖрдкрдХреА рдорджрдж рдХреЗ рд▓рд┐рдПред

 

Chatbot: рдЖрдкрдХрд╛рд╕реНрд╡рд╛рдЧрдд рд╣реИ! рдХрд┐рд╕реА рднреАрд╕рдордп рд╕рд╣рд╛рдпрддрд╛ рдХреЗ рд▓рд┐рдП рд╣рдорд╕реЗрд╕рдВрдкрд░реНрдХ рдХрд░реЗрдВред
End of instructions.  
'''

if st.session_state.messages[-1]["role"] != "assistant":
    with st.chat_message("assistant"):
        with st.spinner("Thinking..."):
            response = generate_response(load+prompt) 
            st.write(response) 
    message = {"role": "assistant", "content": response}
    st.session_state.messages.append(message)
